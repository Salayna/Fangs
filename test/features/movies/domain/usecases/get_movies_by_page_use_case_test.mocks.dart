// Mocks generated by Mockito 5.4.4 from annotations
// in socle/test/features/movies/domain/usecases/get_movies_by_page_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:socle/core/domain/entities/result.dart' as _i2;
import 'package:socle/features/movies/domain/entities/movie_entity.dart' as _i6;
import 'package:socle/features/movies/domain/entities/page_of_movies_entity.dart'
    as _i5;
import 'package:socle/features/movies/domain/repositories/movie_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResult_0<T> extends _i1.SmartFake implements _i2.Result<T> {
  _FakeResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockMovieRepository extends _i1.Mock implements _i3.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Result<_i5.PageOfMoviesEntity>> byPage(
    int? page,
    String? locale,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #byPage,
          [
            page,
            locale,
          ],
        ),
        returnValue: _i4.Future<_i2.Result<_i5.PageOfMoviesEntity>>.value(
            _FakeResult_0<_i5.PageOfMoviesEntity>(
          this,
          Invocation.method(
            #byPage,
            [
              page,
              locale,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i5.PageOfMoviesEntity>>);

  @override
  _i4.Future<_i2.Result<_i6.MovieEntity>> byId(
    int? id,
    String? locale,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #byId,
          [
            id,
            locale,
          ],
        ),
        returnValue: _i4.Future<_i2.Result<_i6.MovieEntity>>.value(
            _FakeResult_0<_i6.MovieEntity>(
          this,
          Invocation.method(
            #byId,
            [
              id,
              locale,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Result<_i6.MovieEntity>>);

  @override
  _i4.Future<_i2.Result<void>> addToFavorite(_i6.MovieEntity? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #addToFavorite,
          [movie],
        ),
        returnValue: _i4.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #addToFavorite,
            [movie],
          ),
        )),
      ) as _i4.Future<_i2.Result<void>>);

  @override
  _i4.Future<_i2.Result<void>> removeFromFavorite(_i6.MovieEntity? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFromFavorite,
          [movie],
        ),
        returnValue: _i4.Future<_i2.Result<void>>.value(_FakeResult_0<void>(
          this,
          Invocation.method(
            #removeFromFavorite,
            [movie],
          ),
        )),
      ) as _i4.Future<_i2.Result<void>>);

  @override
  _i4.Future<_i2.Result<List<_i6.MovieEntity>>> favorites() =>
      (super.noSuchMethod(
        Invocation.method(
          #favorites,
          [],
        ),
        returnValue: _i4.Future<_i2.Result<List<_i6.MovieEntity>>>.value(
            _FakeResult_0<List<_i6.MovieEntity>>(
          this,
          Invocation.method(
            #favorites,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Result<List<_i6.MovieEntity>>>);
}
