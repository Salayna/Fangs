// Mocks generated by Mockito 5.4.4 from annotations
// in socle/test/features/movies/data/repositories/movies_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:socle/core/network/app_network_info.dart' as _i6;
import 'package:socle/features/movies/data/datasources/movie_local_data_source.dart'
    as _i4;
import 'package:socle/features/movies/data/datasources/movie_remote_data_source.dart'
    as _i2;
import 'package:socle/features/movies/data/models/movie_model.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [MovieRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockMovieRemoteDataSource extends _i1.Mock
    implements _i2.MovieRemoteDataSource {
  MockMovieRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<dynamic> getMoviesByPage(
    int? page,
    String? locale,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMoviesByPage,
          [
            page,
            locale,
          ],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<dynamic> getMovieById(
    int? id,
    String? locale,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieById,
          [
            id,
            locale,
          ],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);
}

/// A class which mocks [MovieLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockMovieLocalDataSource extends _i1.Mock
    implements _i4.MovieLocalDataSource {
  MockMovieLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> saveFavorite(_i5.MovieModel? movie) => (super.noSuchMethod(
        Invocation.method(
          #saveFavorite,
          [movie],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> removeFavorite(_i5.MovieModel? movie) => (super.noSuchMethod(
        Invocation.method(
          #removeFavorite,
          [movie],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i5.MovieModel>> retrieveFavorites() => (super.noSuchMethod(
        Invocation.method(
          #retrieveFavorites,
          [],
        ),
        returnValue: _i3.Future<List<_i5.MovieModel>>.value(<_i5.MovieModel>[]),
      ) as _i3.Future<List<_i5.MovieModel>>);
}

/// A class which mocks [AppNetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppNetworkInfo extends _i1.Mock implements _i6.AppNetworkInfo {
  MockAppNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
